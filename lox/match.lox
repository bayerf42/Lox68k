// Very simple regular expression matcher based on
// https://www.cs.princeton.edu/courses/archive/spr09/cos333/beautiful.html
// but with several extensions

"Testing basic match"
match("cd", "abcdef")        // [2, 4]
match("cx", "abcdef")        // nil
match("c.e", "abcdef")       // [2, 5]
"Testing start/end anchors"
match("^xy$", "xyz")         // nil
match("^xy$", "xy")          // [0, 2]
match("^xy", "xyz")          // [0, 2]
match("..$", "xyz")          // [1, 3]
"Testing *,+,?"
match("ab*c", "xac")         // [1, 3]
match("ab*c", "xabc")        // [1, 4]
match("ab*c", "xabbbc")      // [1, 6]
match("ab+c", "xac")         // nil
match("ab+c", "xabc")        // [1, 4]
match("ab+c", "xabbbc")      // [1, 6}
match("ab?c", "xac")         // [1, 3]
match("ab?c", "xabc")        // [1, 4]
match("ab?c", "xabbbc")      // nil
"Testing char classes"
match("%a", "12e45")         // [2, 3]
match("%a%d", "12e45")       // [2, 4]
match("%d%p", "12e45,e")     // [4, 6]
match("%X", "defg")          // [3, 4]
match("%d+", "abc456efg")    // [3, 6]
match("%a%w*","3+a12x-54")   // [2, 6]
"Testing escapes"
match("%..%%","--.X%--")     // [2, 5]
match("%G+","defgGGgh")      // [4, 6]
"Testing end match"
match("...?.$",  "1")         // nil
match("...?.$",  "12")        // nil
match("...?.$",  "123")       // [0, 3]
match("...?.$",  "1234")      // [0, 4]
match("...?.$",  "12345")     // [1, 5]
match("$",   "foobar")        // [6, 6]
match("r?$", "foobar")        // [5, 6]
match("z?$", "foobar")        // [6, 6]
"Optional start index"
match("ab*c", "xabcqacyabbcu")     // [1, 4]
match("ab*c", "xabcqacyabbcu", 4)  // [5, 7]
match("ab*c", "xabcqacyabbcu", 7)  // [8, 12]
match("ab*c", "xabcqacyabbcu", 12) // nil

