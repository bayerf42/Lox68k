// (Kit only) play some music on buzzer.
//
// Load notes.lox or notesmap.lox before

fun popcorn(dur) {

  fun stacc(note) {
    sound(freq[note], dur / 4); // index instance freq with a (variable) string
    sleep(dur / 4 * 3);
  }


  fun final(note) {
    sound(freq[note], dur / 2);
    sleep(dur / 2 * 3);
  }


  fun phrase1() {
    stacc("h1");
    stacc("a1");
    stacc("h1");
    stacc("fis1");
    stacc("d1");
    stacc("fis1");
    final("h");
  }

  fun phrase2() {
    stacc("h1");
    stacc("cis2");
    stacc("d2");
    stacc("cis2");
    stacc("d2");
    stacc("h1");
    stacc("cis2");
    stacc("h1");
    stacc("cis2");
    stacc("a1");
    stacc("h1");
    stacc("a1");
    stacc("h1");
  }

  fun phrase2a() {
    stacc("g1");
    final("h1");
  }

  fun phrase2b() {
    stacc("cis2");
    final("d2");
  }

  fun phrase3() {
    stacc("fis2");
    stacc("e2");
    stacc("fis2");
    stacc("d2");
    stacc("a1");
    stacc("d2");
    final("fis1");
  }

  fun phrase4() {
    stacc("fis2");
    stacc("gis2");
    stacc("a2");
    stacc("gis2");
    stacc("a2");
    stacc("fis2");
    stacc("gis2");
    stacc("fis2");
    stacc("gis2");
    stacc("e2");
    stacc("fis2");
    stacc("e2");
  }

  fun phrase4a() {
    stacc("fis2");
    stacc("d2");
    final("fis2");
  }

  fun phrase4b() {
    stacc("cis2");
    stacc("e2");
    final("fis2");
  }

  fun partA(repeat) {
    phrase1();
    phrase1();
    phrase2();
    if (!repeat)
      phrase2a();
    else
      phrase2b();
  }

  fun partB(repeat) {
    phrase3();
    phrase3();
    phrase4();
    if (!repeat)
      phrase4a();
    else
      phrase4b();
  }

  partA(false);
  partA(true);

  partB(false);
  partB(true);

  partA(false);
  partA(false);
}


fun play(lst, dur) {
  for (var i = 0; i < length(lst); i = i + 1) {
    sound(freq[lst[i]], dur);
  }
}

fun scale() {
  play(["c","d","e","f","g","a","h","c1"], 200);
}
