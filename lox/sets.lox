// Sets implemented as dictionaries

class Set {
    init(..list) {
       for (var i=0; i<length(list); i=i+1)
           this[list[i]] = true;
    }

    clone() {
        var res=Set();
        for (var it=slots(this); valid(it); next(it))
            res[it@]=it^;
        return res;
    }

    display() {
        var first = true;
        print "{",; 
        for (var it=slots(this); valid(it); next(it)) {
            if (!first) print ", ",;
            first = false;  
            print it@,;
        }
        print "}";
    }  

    union(that) {
        for (var it=slots(that); valid(it); next(it))
            this[it@] = true;
        return this;
    }

    intersect(that) {
        for (var it=slots(this); valid(it); next(it))
            if (!that.contains(it@))
               remove(this,it@);
               // it^ = nil;
        return this;
    }

    subtract(that) {
        for (var it=slots(that); valid(it); next(it))
            remove(this,it@);
        return this;
    }

    contains(el) {
        return !!this[el];
    }

}
