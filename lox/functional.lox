// Some functional programming tools and tests

fun foreach(fn, lst) {
  for (var i=0; i<length(lst); i=i+1)
    fn(lst[i]);
}

fun range(lower, upper) {
  var res = list(upper - lower + 1, 0);
  for (var i = lower; i<=upper; i=i+1)
    res[i - lower]  = i;
  return res;
}

fun sum(n) {
  return reduce(fun (x,y) -> x+y, range(1, n));
}


fun sso(a, b) {
  // sum of squares of odd numbers from a to b

  fun add(x, y)  { return x + y; }
  fun square(x)  { return x * x; }
  fun even(n)    { return n \ 2 == 0; }

  return reduce(add, map(square,
                         filter(complement(even),
                                range(a, b))));
}
  
fun sso2(a, b) {
  // same, but with lambdas
  return reduce(fun (x,y) -> x+y,
                map(fun (x) -> x*x,
                    filter(complement(fun (n) -> n\2 == 0),
                           range(a, b))));
}
  

